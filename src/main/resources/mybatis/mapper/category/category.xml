<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.swyp.doubleSeven.domain.common.category.dao.CategoryDAO">
    <!-- 하위 카테고리명 조회 -->
    <select id="selectSubCategoryNames" resultType="string">
        SELECT SUB_CATEGORY_NAME
        FROM SUB_CATEGORY
        ORDER BY MAIN_CATEGORY_ID, SUB_CATEGORY_ID
    </select>


    <!-- 캘린더뷰: 카테고리 정렬 -->
    <resultMap id="categoryOrderMap" type="com.swyp.doubleSeven.domain.common.category.dto.response.CategoryOrderResponse">
        <result property="categoryName" column="SUB_CATEGORY_NAME"/>
        <result property="categoryTotalAmount" column="TOTAL_AMOUNT"/>
    </resultMap>

<!--    <select id="selectMonthlyCategoryOrder" resultMap="categoryOrderMap">
        SELECT
            sub.SUB_CATEGORY_NAME,
            COALESCE(SUM(s.AMOUNT), 0) as TOTAL_AMOUNT
        FROM SUB_CATEGORY sub
                 LEFT JOIN SAVING s ON s.SUB_CATEGORY_ID = sub.SUB_CATEGORY_ID
            AND s.MEMBER_ID = #{memberId}
            AND YEAR(s.SAVING_YMD) = #{year}
            AND MONTH(s.SAVING_YMD) = #{month}
        GROUP BY
            sub.SUB_CATEGORY_ID,
            sub.SUB_CATEGORY_NAME
        HAVING TOTAL_AMOUNT > 0
        ORDER BY
            TOTAL_AMOUNT DESC
    </select>-->


    <!-- Insert Saving시 Category count 테이블에도 insert -->
    <insert id="incrementCategoryCount">
        INSERT INTO CATEGORY_COUNT (MEMBER_ID, SUB_CATEGORY_ID, COUNT)
        SELECT
            #{memberId},
            sc.SUB_CATEGORY_ID,
            1
        FROM SUB_CATEGORY sc
        WHERE sc.SUB_CATEGORY_NAME = #{categoryName}
            ON DUPLICATE KEY UPDATE
                                 COUNT = CATEGORY_COUNT.COUNT + 1
    </insert>

    <!-- 자주 사용한 순으로 카테고리 정렬 -->
    <select id="countByCategory" resultType="com.swyp.doubleSeven.domain.common.category.dto.response.CategoryOrderResponse">
        SELECT
            sc.SUB_CATEGORY_NAME as categoryName,
            COUNT(*) as categoryCount
        FROM SAVING s
                 JOIN SUB_CATEGORY sc ON s.SUB_CATEGORY_ID = sc.SUB_CATEGORY_ID
        WHERE s.IS_DELETE = 'N'
          AND s.MEMBER_ID = #{memberId}
          AND YEAR(s.SAVING_YMD) = #{year}
          AND MONTH(s.SAVING_YMD) = #{month}
        GROUP BY sc.SUB_CATEGORY_NAME
        ORDER BY categoryCount DESC
    </select>


</mapper>