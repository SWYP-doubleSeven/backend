<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.swyp.doubleSeven.domain.badge.dao.UserBadgeDAO">

    <!-- resultMap -->
    <resultMap id="BadgeResultMap" type="com.swyp.doubleSeven.domain.badge.dto.response.BadgeResponse">
        <id property="badgeId" column="BADGE_ID"/>
        <result property="badgeName" column="BADGE_NAME"/>
        <result property="emblemPath" column="EMBLEM_PATH"/>
        <result property="badgeType" column="BADGE_TYPE"/>
        <result property="mainCategoryId" column="MAIN_CATEGORY_ID"/>
        <result property="operator" column="OPERATOR"/>
        <result property="value" column="VALUE"/>
        <result property="acquireYN" column="ACQUIRE_YN"/>
        <result property="rgstId" column="RGST_ID"/>
        <result property="rgstDt" column="RGST_DT"/>
        <result property="updtId" column="UPDT_ID"/>
        <result property="updtDt" column="UPDT_DT"/>
    </resultMap>

    <!-- 뱃지 단건 조회 -->
    <select id="getBadge" parameterType="badgeRequest" resultMap="BadgeResultMap">
        SELECT
            A.BADGE_ID,
            A.BADGE_NAME,
            A.EMBLEM_PATH,
            A.BADGE_TYPE,
            A.MAIN_CATEGORY_ID,
            A.OPERATOR,
            A.VALUE,
            A.RGST_ID,
            DATE_FORMAT(A.RGST_DT, '%Y-%m-%d %H:%i:%s') AS RGST_DT,
            A.UPDT_ID,
            DATE_FORMAT(A.UPDT_DT, '%Y-%m-%d %H:%i:%s') AS UPDT_DT,
            CASE WHEN B.BADGE_ID IS NOT NULL THEN 'Y' ELSE 'N' END AS ACQUIRE_YN
        FROM BADGE A
        LEFT OUTER JOIN BADGE_ACQUIRE B
            ON A.BADGE_ID = B.BADGE_ID
            AND B.MEMBER_ID = #{memberId}
        WHERE 1=1
            AND A.BADGE_ID = #{badgeId}
    </select>

    <!-- 전체 뱃지 목록 조회 -->
    <select id="getBadgeList" parameterType="java.lang.Integer" resultMap="BadgeResultMap">
        SELECT
            A.BADGE_ID,
            A.BADGE_NAME,
            A.EMBLEM_PATH,
            A.BADGE_TYPE,
            A.MAIN_CATEGORY_ID,
            A.OPERATOR,
            A.VALUE,
            A.RGST_ID,
            DATE_FORMAT(A.RGST_DT, '%Y-%m-%d %H:%i:%s') AS RGST_DT,
            A.UPDT_ID,
            DATE_FORMAT(A.UPDT_DT, '%Y-%m-%d %H:%i:%s') AS UPDT_DT,
            CASE WHEN B.BADGE_ID IS NOT NULL THEN 'Y' ELSE 'N' END AS ACQUIRE_YN
        FROM BADGE A
        LEFT OUTER JOIN BADGE_ACQUIRE B
            ON A.BADGE_ID = B.BADGE_ID
        AND B.MEMBER_ID = #{memberId}
        WHERE 1=1
    </select>

</mapper>
